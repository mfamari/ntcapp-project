name: Terraform CI/CD (auto-apply with scanning and cost analysis)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  TF_WORKING_DIR: ./terraform
  TF_PLAN_FILE: plan.binary

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  validate-and-scan:
    name: Terraform validate and scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Setup Python (for Checkov)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Terraform fmt check
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check -recursive

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: terraform init -input=false

      - name: Terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate -no-color

      # ---- TFLint ----
      - name: Install TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          tflint --init
          tflint --format sarif --out tflint.sarif || true

      # ---- tfsec ----
      - name: Run tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.0
        with:
          working_directory: ${{ env.TF_WORKING_DIR }}
          format: sarif
          output: ${{ env.TF_WORKING_DIR }}/tfsec.sarif
        continue-on-error: true

      # ---- Checkov ----
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      - name: Run Checkov scan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          checkov -d . --quiet --output-file-path checkov.json --output json || true

      # ---- Upload scan artifacts ----
      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: terraform-scan-reports
          path: |
            ${{ env.TF_WORKING_DIR }}/tflint.sarif
            ${{ env.TF_WORKING_DIR }}/tfsec.sarif
            ${{ env.TF_WORKING_DIR }}/checkov.json

  plan-and-apply:
    name: Terraform plan, cost analysis & apply
    needs: validate-and-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: terraform init -input=false

      - name: Terraform plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: terraform plan -input=false -out=${{ env.TF_PLAN_FILE }} -no-color

      - name: Upload Terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TF_WORKING_DIR }}/${{ env.TF_PLAN_FILE }}

      # ---- Infracost Cost Analysis ----
      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost breakdown
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
        run: |
          infracost breakdown --path . \
            --terraform-plan-file ${{ env.TF_PLAN_FILE }} \
            --format json \
            --out-file infracost.json
          echo "==== Estimated Cost Breakdown ===="
          infracost output --path infracost.json --format table

      - name: Post cost estimate comment (PR only)
        if: github.event_name == 'pull_request'
        uses: infracost/actions/comment@v2
        with:
          path: ${{ env.TF_WORKING_DIR }}/infracost.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          behavior: update
          tag: terraform-cost

      # ---- Upload Infracost report ----
      - name: Upload cost analysis report
        uses: actions/upload-artifact@v4
        with:
          name: infracost-report
          path: ${{ env.TF_WORKING_DIR }}/infracost.json

      - name: Terraform apply
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: terraform apply -auto-approve -input=false ${{ env.TF_PLAN_FILE }}
